<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yilin.app.mapper.RechargeMapper">
  <resultMap id="BaseResultMap" type="com.yilin.app.domain.Recharge">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="serise" jdbcType="TINYINT" property="serise" />
    <result column="money" jdbcType="REAL" property="money" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="url" jdbcType="VARCHAR" property="url" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, serise, money, time, status, url
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from recharge
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from recharge
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yilin.app.domain.Recharge">
    insert into recharge (id, user_id, serise,
    money, time, status,
    url)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{serise,jdbcType=TINYINT},
    #{money,jdbcType=REAL}, #{time,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT},
    #{url,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yilin.app.domain.Recharge">
    insert into recharge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="serise != null">
        serise,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="url != null">
        url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="serise != null">
        #{serise,jdbcType=TINYINT},
      </if>
      <if test="money != null">
        #{money,jdbcType=REAL},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yilin.app.domain.Recharge">
    update recharge
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="serise != null">
        serise = #{serise,jdbcType=TINYINT},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=REAL},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yilin.app.domain.Recharge">
    update recharge
    set user_id = #{userId,jdbcType=INTEGER},
      serise = #{serise,jdbcType=TINYINT},
      money = #{money,jdbcType=REAL},
      time = #{time,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      url = #{url,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectPage" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from recharge
    where user_id = #{userId} and serise = #{serise}
    limit #{start},#{pageSize}
  </select>
</mapper>