<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yilin.app.mapper.CollegeMapper">
    <resultMap id="BaseResultMap" type="com.yilin.app.domain.College">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="video" jdbcType="VARCHAR" property="video" />
        <result column="readNum" jdbcType="INTEGER" property="readnum" />
        <result column="forward" jdbcType="INTEGER" property="forward" />
        <result column="time" jdbcType="TIMESTAMP" property="time" />
        <result column="img" jdbcType="VARCHAR" property="img" />
        <result column="type" jdbcType="TINYINT" property="type" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yilin.app.domain.College">
        <result column="content" jdbcType="LONGVARCHAR" property="content" />
    </resultMap>
    <sql id="Base_Column_List">
        id, title, video, readNum, forward, time, img, type
    </sql>
    <sql id="Blob_Column_List">
        content
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from college
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from college
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.yilin.app.domain.College">
        insert into college (id, title, video,
        readNum, forward, time,
        img, type, content
        )
        values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{video,jdbcType=VARCHAR},
        #{readnum,jdbcType=INTEGER}, #{forward,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP},
        #{img,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{content,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.yilin.app.domain.College">
        insert into college
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="video != null">
                video,
            </if>
            <if test="readnum != null">
                readNum,
            </if>
            <if test="forward != null">
                forward,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="img != null">
                img,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="video != null">
                #{video,jdbcType=VARCHAR},
            </if>
            <if test="readnum != null">
                #{readnum,jdbcType=INTEGER},
            </if>
            <if test="forward != null">
                #{forward,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="img != null">
                #{img,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yilin.app.domain.College">
        update college
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="video != null">
                video = #{video,jdbcType=VARCHAR},
            </if>
            <if test="readnum != null">
                readNum = #{readnum,jdbcType=INTEGER},
            </if>
            <if test="forward != null">
                forward = #{forward,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="img != null">
                img = #{img,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yilin.app.domain.College">
        update college
        set title = #{title,jdbcType=VARCHAR},
        video = #{video,jdbcType=VARCHAR},
        readNum = #{readnum,jdbcType=INTEGER},
        forward = #{forward,jdbcType=INTEGER},
        time = #{time,jdbcType=TIMESTAMP},
        img = #{img,jdbcType=VARCHAR},
        type = #{type,jdbcType=TINYINT},
        content = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yilin.app.domain.College">
    update college
    set title = #{title,jdbcType=VARCHAR},
      video = #{video,jdbcType=VARCHAR},
      readNum = #{readnum,jdbcType=INTEGER},
      forward = #{forward,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      img = #{img,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectPage" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from college where 1=1
        <if test="type != null">
           and  type = #{type}
        </if>
        <if test="title != null">
            and  type like '%${title}%'
        </if>
        order by time
        limit #{start},#{pageSize}
    </select>

    <select id="count" parameterType="map" resultType="int">
        select
        count(*)
        from college
    </select>
</mapper>